name: Build Badges

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "**"

jobs:
  test:
    name: Run Primeraly Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
         go-version: 1.19

      - name: Verify dependencies
        run: go mod verify
      
      - name: Tidy
        run: go mod tidy

      - name: Run go vet
        run: make run-vet

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: make static-check

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: make lint

      - name: Run Test
        run: make test

  create-coverage-badges:
    name: Create Coverage Badges
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Get Coverage Percentage
        run: echo "COV=$(go tool cover --func=cover.out | grep 'total' | awk '{print $3}')" >> $GITHUB_ENV

      - name: Get Gist Id
        run: |
          echo "${{ secrets.GIST_KEY }}" > ./gist.env.asc
          echo "GIST_ID=$(gpg -d --passphrase "${{ secrets.PARAPHRASE }}" --batch ./gist.env.asc > ./gist.env | cat)" >> $GITHUB_ENV
          rm -rf gist.env.asc
          rm -rf gist.env

      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@master
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ env.GIST_ID }}
          filename: coverage.json
          label: Coverage
          message: ${{ env.COV }}
          valColorRange: ${{ env.COV }}
          maxColorRange: 100
          minColorRange: 0
